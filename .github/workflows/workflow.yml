name: pyfk
on:
  push:
    branches:
      - master
jobs:
  run:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python: ["3.6", "3.7", "3.8"]
    env:
      OS: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Install pipenv
        run: |
          pip install pipenv

      - id: cache-pipenv
        uses: actions/cache@v2
        with:
          path: $HOME/.local/share/virtualenvs
          key: ${{ matrix.os }}-${{ matrix.python }}-pipenv-${{ hashFiles('**/Pipfile') }}

      - name: Install pipenv packages if not cached
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: |
          pipenv install -d

      - name: Generate coverage report
        run: |
          pipenv run pip install .
          mkdir coverage_test
          cd coverage_test
          pipenv run coverage run --source=pyfk -m pytest --pyargs pyfk
          cd ..
          pipenv run coverage xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          env_vars: OS
          fail_ci_if_error: false
          verbose: true

      - id: cache-openmp
        uses: actions/cache@v2
        with:
          path: $HOME/.local/share/openmp
          key: ${{ matrix.os }}-${{ matrix.python }}-openmp

      - name: Install openmp if not cached
        if: steps.cache-openmp.outputs.cache-hit != 'true'
        run: |
          wget https://download.open-mpi.org/release/open-mpi/v4.0/openmpi-4.0.2.tar.gz
          tar -xf ./openmpi-4.0.2.tar.gz
          cd openmpi-4.0.2
          ./configure --prefix="$HOME/.local/share/openmp"
          make
          make install
          cd ..

      - name: Test MPI run
        run: |
          export PATH=${PATH}:$HOME/.local/share/openmp/bin
          export PYFK_USE_MPI=1
          export PYFK_MPI_HOME="$HOME/.local/share/openmp"
          pipenv run pip uninstall pyfk -y
          pipenv run pipenv install mpi4py
          pipenv run pip install .
          cd coverage_test
          pipenv run mpirun --oversubscribe -np 1 pytest --with-mpi --pyargs pyfk
          pipenv run mpirun --oversubscribe -np 3 pytest --with-mpi --pyargs pyfk
          cd ..